# We plan to execute manually for tutorial purposes
trigger: none
# for production projects, the recommended trigger is peridical, once a week

schedules:
- cron: "0 12 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - main

pool:
  name: ImagesBuilderPool
  vmImage: Canonical:0001-com-ubuntu-confidential-vm-focal:20_04-lts-gen2:latest

variables:
  - group: ProductImageBuild.Options

steps:

- script: chmod u+x ${BUILD_SOURCESDIRECTORY}/scripts/*.sh
  displayName: "Grant shell execution permissions"

# get SUIF
- script: |
    export MY_SUIF_TAG=$(MY_SUIF_TAG)
    ${BUILD_SOURCESDIRECTORY}/scripts/01.getSUIF.sh
  displayName: 'Get SUIF'

# update ubuntu machine
- script: ${BUILD_SOURCESDIRECTORY}/scripts/02.prepareAgentMachine.sh
  displayName: 'System software preparation'

# get SA share secrets
- task: DownloadSecureFile@1
  name: SASecureInfo
  displayName: 'Download secure information for images share'
  inputs:
    secureFile: 'sa.share.secrets.sh'

# mount SA share
- script: ${BUILD_SOURCESDIRECTORY}/scripts/03.mountImagesShare.sh
  displayName: 'Mount images share'

# assure installation binaries
- script: ${BUILD_SOURCESDIRECTORY}/scripts/04.assureInstallBinaries.sh
  displayName: 'Assure installation binaries'

# get SDC Credentials
- task: DownloadSecureFile@1
  name: SDCCredentials
  displayName: 'Download SDC credentials'
  inputs:
    secureFile: 'sdc.credentials.sh'

# Boostrap Update Manager
- script: ${BUILD_SOURCESDIRECTORY}/scripts/05.installSUM.sh
  displayName: 'Install SUM'

# umount SA share
- script: |
    export MY_SUIF_TAG=$(MY_SUIF_TAG)
    export MY_templates=$(MY_templates)
    export SUIF_DEBUG_ON=$(SUIF_DEBUG_ON)
    ${BUILD_SOURCESDIRECTORY}/scripts/06.buildSagImages.sh
  displayName: 'Build Images'

# Save audit on share 
# HINT: ou should use this step only for debug purposes
# HINT: without this step the mount may be readonly
- script: ${BUILD_SOURCESDIRECTORY}/scripts/11.saveAudit.sh
  displayName: 'Save Audit on Share'
  condition: always()

# umount SA share
- script: ${BUILD_SOURCESDIRECTORY}/scripts/12.unmountShare.sh
  displayName: 'Unmount images share'
  condition: always()